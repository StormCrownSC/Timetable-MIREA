version: "3.9"

services:

  database:
    build: 
      context: ./
      dockerfile: images/sql/Dockerfile.postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  server:
    hostname: server.mirea
    build:
      context: ./
      dockerfile: images/server/Dockerfile.server
    restart: unless-stopped
    stdin_open: true
    tty: true
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy

  django:
    hostname: timetable.mirea
    build:
      context: ./
      dockerfile: images/django/Dockerfile.django
    restart: unless-stopped
    # Временно для тестирования и разработки
    #volumes:
    #- ./src:/django
    # Временно для тестирования и разработки
    command: bash -rc "python3 timetable/manage.py makemigrations schedule &&
      python3 timetable/manage.py migrate schedule &&
      python3 timetable/manage.py makemigrations &&
      python3 timetable/manage.py migrate &&
      python3 timetable/manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    healthcheck:
      test: curl -sS http://0.0.0.0:8000 || echo 1
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      database:
        condition: service_healthy

  nginx:
    build:
      context: ./
      dockerfile: images/nginx/Dockerfile.nginx
    restart: unless-stopped
    ports:
      - '8080:8080'
    depends_on:
      django:
        condition: service_healthy
    
